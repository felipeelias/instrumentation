<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <style type="text/css">
    * {
      font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
    }

    h1 {
      font-size: 3em;
      color: #222;
      margin: 0;
    }

    h5 {
      margin: 0;
      color: #888;
    }

    canvas {
      width: 1000px;
      height: 300px;
    }

    .content {
      width: 1200px;
      margin: auto;
    }

    .container {
      display: flex;
      flex-direction: row;
      margin-top: 20px;
      height: 300px;
    }

    .chart-container {
      width: 1000px;
      height: 300px;
    }
  </style>
</head>
<body>
  <div class="content">
    <div class="container">
      <div class="stats-column">
        <h5>Memory (RSS)</h5>
        <h1 id="memory-last-value">200MB</h1>
      </div>
      <div class="chart-container">
        <canvas id="memory" width="1000" height="300"></canvas>
      </div>
    </div>

    <div class="container">
      <div class="stats-column">
        <h5>Loadavg (1 min)</h5>
        <h1 id="loadavg-last-value">200</h1>
      </div>
      <div class="chart-container">
        <canvas id="loadavg" width="1000" height="300"></canvas>
      </div>
    </div>
  </div>

  <script charset="utf-8"><%= asset('chart.min.js') %></script>
  <script>
    Chart.defaults.global.defaultFontSize = 8;
    Chart.defaults.global.animation.duration = 500;
    Chart.defaults.global.legend.display = false;
    Chart.defaults.global.elements.line.backgroundColor = "rgba(0,0,0,0)";
    Chart.defaults.global.elements.line.borderColor = "rgba(0,0,0,0.9)";
    Chart.defaults.global.elements.line.borderWidth = 2;


    var defaultOptions = {
      type: 'line',
      data: {
        labels: [],
        datasets: [{
          label: '',
          data: [],
          lineTension: 0.2,
          pointRadius: 0
        }]
      },
      options: {
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero:true
            }
          }],
          xAxes: [{
            type: 'time',
            time: {
              unitStepSize: 30
            },
            minUnit: 'second',
            gridLines: {
              display: false
            }
          }]
        }
      },
      tooltips: {
        enabled: false
      },
      responsive: true,
      maintainAspectRatio: false,
      animation: false
    }

    var memoryChart = new Chart(document.getElementById('memory'), defaultOptions);
    var loadavgChart = new Chart(document.getElementById('loadavg'), defaultOptions);

    var socket = new WebSocket("ws://localhost:8080/");
    socket.onmessage = function (raw_event) {
      var event = JSON.parse(raw_event.data)

      switch (event.data_type) {
        case 'memory':
          var mem = event.data.map(function(v) { return v[1] });
          var counts = event.data.map(function(v) { return v[0] });

          memoryChart.data.labels = counts
          memoryChart.data.datasets[0].data = mem
          memoryChart.update()

          break;
        case 'loadavg':
          var mem = event.data.map(function(v) { return v[1] });
          var counts = event.data.map(function(v) { return v[0] });

          loadavgChart.data.labels = counts
          loadavgChart.data.datasets[0].data = mem
          loadavgChart.update()

          break;
        default:
          break;
      }
    }
  </script>
</body>
